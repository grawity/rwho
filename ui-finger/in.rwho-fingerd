#!/usr/bin/php
<?php
require __DIR__."/../lib-php/librwho.php";

function finger_handle_query($input) {
	list ($query, $detailed) = finger_parse($input);

	if ($query === '*') {
		$data = RWho\retrieve_hosts();
		if (!count($data))
			die("No active hosts.\r\n");
		output_hosts($data);
		if ($detailed) {
			$n_users = RWho\count_users();
			$n_conns = RWho\count_conns();
			$n_hosts = count($data);
			print("\r\n");
			printf("(%d users over %d connections on %d hosts.)\r\n",
				$n_users, $n_conns, $n_hosts);
		}
	}
	else {
		list ($q_user, $q_host) = RWho\parse_query($query);
		$data = RWho\retrieve($q_user, $q_host);
		if (!count($data))
			die("Nobody is logged in.\r\n");
		if (!$detailed)
			$data = RWho\summarize($data);
		output($data, $detailed);
		if ($detailed) {
			if ($q_user === '') {
				$n_users = RWho\count_users();
				$n_conns = count($data);
				$n_hosts = RWho\count_hosts();
				print("\r\n");
				printf("(%d users over %d connections on %d hosts.)\r\n",
					$n_users, $n_conns, $n_hosts);
			} else {
				print("\r\n");
				output_plan($q_user, $q_host);
			}
		}
	}
}

function finger_parse($input) {
	$input = rtrim($input, "\r\n");
	if ($input === "/W" or substr($input, 0, 3) === "/W ") {
		$query = substr($input, 3);
		$detailed = true;
	} else {
		$query = $input;
		$detailed = false;
	}
	return array($query, $detailed);
}

function output($data, $detailed=false) {
	if ($detailed) {
		$fmt = "%-12s %1s %-22s %-10s %s\r\n";
		$headers = array("USER", "", "HOST", "LINE", "FROM");
	} else {
		$fmt = "%-12s %-12s %-10s %s\r\n";
		$headers = array("USER", "HOST", "LINE", "FROM");
	}

	vprintf($fmt, $headers);

	$last = array("user" => null);
	foreach ($data as $row) {
		$line = array();
		$flag = "";

		if (RWho\is_stale($row["updated"])) {
			if (!$detailed)
				continue;
			$flag = "?";
		}
		elseif ($row["uid"] == 0)
			$flag = "#";
		elseif ($row["uid"] < 25000)
			$flag = "<";

		$line[] = ($row["user"] === $last["user"]) ? "" : $row["user"];

		if ($detailed)
			$line[] = $flag;

		$line[] = $detailed
				? $row["host"]
				: substr(RWho\strip_domain($row["host"]), 0, 12);

		$line[] = $row["is_summary"]
				? "{".$row["line"]."}"
				: $row["line"];

		if ($detailed)
			$line[] = $row["rhost"];
		else {
			$len = strlen($row["rhost"]);
			if ($len > 40)
				$line[] = substr($row["rhost"], 0, 39).">";
			elseif ($len > 0)
				$line[] = $row["rhost"];
			else
				$line[] = "-";
		}

		vprintf($fmt, $line);

		$last = $row;
	}
}

function output_hosts($data) {
	$fmt = "%-12s %-26s %-5s %-5s %s\r\n";
	$headers = array("HOST", "DOMAIN NAME", "#USR", "#CON", "UPDATED");

	vprintf($fmt, $headers);

	foreach ($data as $row) {
		printf($fmt,
			substr(RWho\strip_domain($row["host"]), 0, 12),
			$row["host"],
			$row["users"],
			$row["entries"],
			RWho\interval($row["last_update"])
		);
	}
}

function output_plan($user, $host) {
	if (!function_exists("posix_getpwnam"))
		return;

	$pw = @posix_getpwnam($user);
	if (!$pw || ($pw["uid"] < 25000 && $pw["uid"] != 0))
		return;

	$dir = $pw["dir"];

	$path_plan = @realpath("$dir/.plan");

	if (!$path_plan || !@is_file($path_plan) || !@is_readable($path_plan)) {
		print("No plan.\r\n");
		return;
	}

	$fplan = @fopen($path_plan, "r");
	if ($fplan) {
		$lines = 0;
		print("Plan:\r\n");
		while (++$lines < 100 && ($line = fgets($fplan, 4096)) !== false) {
			$line = rtrim($line, "\n");
			print("$line\r\n");
		}
		fclose($fplan);
	}
}

if (isset($_SERVER["REQUEST_URI"])) {
	header("Content-Type: text/plain");
	$input = $_SERVER["QUERY_STRING"];
	$input = urldecode($input);
} else {
	$input = fgets(STDIN)
		or die();
}
finger_handle_query($input);
